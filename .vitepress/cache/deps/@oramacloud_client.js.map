{
  "version": 3,
  "sources": ["../../../node_modules/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/_assert.ts", "../../../node_modules/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/node_modules/.pnpm/@noble+hashes@1.5.0/node_modules/@noble/hashes/src/sha3.ts", "../../../node_modules/node_modules/.pnpm/@orama+cuid2@2.2.3/node_modules/@orama/cuid2/src/index.js", "../../../node_modules/node_modules/.pnpm/@orama+cuid2@2.2.3/node_modules/@orama/cuid2/index.js", "../../../node_modules/@oramacloud/client/src/client.ts", "../../../node_modules/node_modules/.pnpm/@orama+orama@3.0.1/node_modules/@orama/orama/src/components/tokenizer/languages.ts", "../../../node_modules/node_modules/.pnpm/@orama+orama@3.0.1/node_modules/@orama/orama/src/utils.ts", "../../../node_modules/node_modules/.pnpm/@orama+orama@3.0.1/node_modules/@orama/orama/src/errors.ts", "../../../node_modules/node_modules/.pnpm/@orama+orama@3.0.1/node_modules/@orama/orama/src/components/defaults.ts", "../../../node_modules/node_modules/.pnpm/@orama+orama@3.0.1/node_modules/@orama/orama/src/components/tokenizer/english-stemmer.ts", "../../../node_modules/@oramacloud/client/package.json", "../../../node_modules/@oramacloud/client/src/answerSession.ts", "../../../node_modules/@oramacloud/client/src/constants.ts", "../../../node_modules/@oramacloud/client/src/utils.ts", "../../../node_modules/@oramacloud/client/src/cache.ts", "../../../node_modules/@oramacloud/client/src/sendBeacon.ts", "../../../node_modules/@oramacloud/client/src/collector.ts", "../../../node_modules/@oramacloud/client/src/heartbeat.ts", "../../../node_modules/@oramacloud/client/src/profile.ts", "../../../node_modules/@oramacloud/client/src/manager/constants.ts", "../../../node_modules/@oramacloud/client/src/manager/index-manager.ts", "../../../node_modules/@oramacloud/client/src/manager/index.ts"],
  "sourcesContent": ["function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n  isLE,\n  byteSwap32,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    if (!isLE) byteSwap32(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!isLE) byteSwap32(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hernández Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = BigInt(8);\n\n  let value = BigInt(0);\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[a-z][0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n", "const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n", "import { createId } from '@orama/cuid2'\nimport type { AnyDocument, AnyOrama, InternalTypedDocument, Nullable, Results, SearchParams } from '@orama/orama'\nimport { formatElapsedTime } from '@orama/orama/components'\nimport type { InferenceType, Interaction, Message } from './answerSession.js'\nimport type { Endpoint, HeartBeatConfig, IOramaClient, IOramaClientMultiSearch, Method, OramaError, OramaInitResponse, Override } from './types.js'\n\nimport { version } from '../package.json'\nimport { AnswerSession } from './answerSession.js'\nimport { Cache } from './cache.js'\nimport { Collector } from './collector.js'\nimport * as CONST from './constants.js'\nimport { MULTI_INDEX_BASE } from './constants.js'\nimport { HeartBeat } from './heartbeat.js'\nimport { Profile } from './profile.js'\n\nexport interface SearchConfig {\n  abortController?: AbortController\n  abortSignal?: AbortSignal\n  fresh?: boolean\n  debounce?: number\n}\n\nexport type SearchMode = 'fulltext' | 'vector' | 'hybrid'\n\ntype AdditionalSearchParams = {\n  mode?: SearchMode\n  returning?: string[]\n  mergeResults?: boolean\n}\n\n// export type AnswerParams = {\n//   type: 'documentation'\n//   query: string\n//   messages: Array<{ role: 'user' | 'system'; content: string }>\n//   context: Results<any>['hits']\n// }\n\nexport type SortByClauseUnion = SortByClause | SortByClause[]\n\ntype Order = 'ASC' | 'DESC' | 'asc' | 'desc'\n\ntype SortByClause = {\n  property: string\n  order?: Order\n}\n\nexport type ClientSearchParams = Override<SearchParams<AnyOrama>, { sortBy?: SortByClauseUnion }> & AdditionalSearchParams\nexport type OramaClientSearchResult<M> = M extends true ? Results<AnyDocument> : Results<AnyDocument>[]\n\nexport type AnswerSessionParams = {\n  inferenceType?: InferenceType\n  initialMessages?: Message[]\n  userContext?: unknown\n  events?: {\n    onMessageChange?: (messages: Message[]) => void\n    onMessageLoading?: (receivingMessage: boolean) => void\n    onAnswerAborted?: (aborted: true) => void\n    onSourceChange?: <T = AnyDocument>(sources: Results<T>) => void\n    onQueryTranslated?: (query: SearchParams<AnyOrama>) => void\n    onRelatedQueries?: (relatedQueries: string[]) => void\n    onNewInteractionStarted?: (interactionId: string) => void\n    onStateChange?: (state: Interaction[]) => void\n  }\n  systemPrompts?: string[]\n}\n\nexport { AnswerSession, type Message }\n\nfunction isAbortController(signal: AbortSignal | AbortController | undefined): signal is AbortController {\n  return signal !== undefined && (signal as AbortController)?.signal !== undefined\n}\n\nexport class OramaClient<M extends boolean = true> {\n  private readonly id = createId()\n  private readonly api_key: string\n  private readonly endpoint: string\n  private readonly multiIndexSearch: boolean\n  private readonly mergeResults: M\n  private readonly multiIndexIndexes?: IOramaClientMultiSearch<M>['indexes']\n  private readonly answersApiBaseURL: string | undefined\n  private readonly collector?: Collector\n  private readonly cache?: Cache<OramaClientSearchResult<M>>\n  private readonly profile: Profile\n  private searchDebounceTimer?: any // NodeJS.Timer\n  private searchRequestCounter = 0\n  private blockSearchTillAuth = false\n\n  private heartbeat?: HeartBeat\n  private initPromise?: Promise<OramaInitResponse | null>\n\n  constructor(params: IOramaClient | IOramaClientMultiSearch<M>) {\n    //TODO: fix this once we can handle multi search telemetry\n    if ('indexes' in params) {\n      //this telemetry will be wrong\n      this.api_key = params.indexes[0].api_key\n      this.multiIndexIndexes = params.indexes\n\n      //check indexes for endpoint\n      const firstEndpointOrigin = new URL(params.indexes[0].endpoint).origin\n      if (params.indexes.some((i) => new URL(i.endpoint).origin !== firstEndpointOrigin)) {\n        throw new Error('All indexes must have the same endpoint origin')\n      }\n      this.endpoint = firstEndpointOrigin + MULTI_INDEX_BASE\n      this.multiIndexSearch = true\n      this.mergeResults = params.mergeResults ?? (true as M)\n    } else {\n      this.api_key = params.api_key\n      this.endpoint = params.endpoint\n      this.multiIndexSearch = false\n      //shouldn't matter for single results\n      this.mergeResults = true as M\n    }\n\n    this.answersApiBaseURL = params.answersApiBaseURL\n\n    // Enable profile tracking\n    this.profile = new Profile({ endpoint: this.endpoint, apiKey: this.api_key })\n\n    // Telemetry is enabled by default\n    if (params.telemetry !== false) {\n      const telementryConfig = {\n        id: this.id,\n        api_key: this.api_key,\n        flushInterval: params.telemetry?.flushInterval ?? CONST.DEFAULT_TELEMETRY_FLUSH_INTERVAL,\n        flushSize: params.telemetry?.flushSize ?? CONST.DEFAULT_TELEMETRY_FLUSH_SIZE\n      }\n      this.collector = Collector.create(telementryConfig, this.profile)\n    }\n\n    // Cache is enabled by default\n    if (params.cache !== false) {\n      const cacheParams = {}\n      this.cache = new Cache<OramaClientSearchResult<M>>(cacheParams)\n    }\n\n    this.init()\n  }\n\n  private customerUserToken: string | undefined = undefined\n  private searchToken: string | undefined = undefined\n  public setAuthToken(customerAuthToken: string | null) {\n    if (customerAuthToken === null) {\n      // unlogged user\n      this.customerUserToken = undefined\n      this.searchToken = undefined\n    } else {\n      this.customerUserToken = customerAuthToken\n      // forgot the previous search token\n      this.searchToken = undefined\n    }\n    // Re-do the init\n    this.init()\n  }\n\n  private onAuthTokenExpired?: (token: string) => void\n  public setOnAuthTokenExpired(onAuthTokenExpired: (token: string) => void) {\n    this.onAuthTokenExpired = onAuthTokenExpired\n  }\n\n  private addSearchResultsToCollector(searchResults: Nullable<OramaClientSearchResult<M>>, roundTripTime: number, query: ClientSearchParams, cached: boolean) {\n    if (this.collector) {\n      if (Array.isArray(searchResults)) {\n        for (const sr of searchResults) {\n          this.collector.add({\n            rawSearchString: query.term,\n            resultsCount: sr.hits?.length ?? 0,\n            roundTripTime,\n            query,\n            cached,\n            searchedAt: new Date(),\n            userId: this.profile.getUserId()\n          })\n        }\n      } else {\n        this.collector.add({\n          rawSearchString: query.term,\n          resultsCount: searchResults?.hits?.length ?? 0,\n          roundTripTime,\n          query,\n          cached,\n          searchedAt: new Date(),\n          userId: this.profile.getUserId()\n        })\n      }\n    }\n  }\n\n  public async search(query: ClientSearchParams, config?: SearchConfig): Promise<Nullable<OramaClientSearchResult<M>>>\n  public async search(\n    query: ClientSearchParams,\n    config?: SearchConfig\n  ): Promise<Nullable<OramaClientSearchResult<M>>> {\n    await this.initPromise\n\n    // Avoid perform search if the user is not authenticated yet\n    if (this.blockSearchTillAuth) {\n      console.warn('Search request blocked until user is authenticated')\n      return null\n    }\n\n    const currentRequestNumber = ++this.searchRequestCounter\n    const cacheKey = `search-${JSON.stringify(query)}`\n\n    let searchResults: Nullable<OramaClientSearchResult<M>> = null\n    let roundTripTime: number\n    let cached = false\n    const shouldUseCache = config?.fresh !== true && this.cache?.has(cacheKey)\n\n    const performSearch = async () => {\n      try {\n        const timeStart = Date.now()\n        if (this.multiIndexSearch) {\n          searchResults = await this.fetch<OramaClientSearchResult<M>>(\n            'multi_search',\n            'POST',\n            { q: { ...query, mergeResults: this.mergeResults }, sst: this.searchToken, indexes: this.multiIndexIndexes },\n            config?.abortController\n          )\n        } else {\n          searchResults = await this.fetch<OramaClientSearchResult<M>>('search', 'POST', { q: query, sst: this.searchToken }, config?.abortController)\n        }\n        const timeEnd = Date.now()\n        roundTripTime = timeEnd - timeStart\n        const elapsed = await formatElapsedTime(BigInt(timeEnd * CONST.MICROSECONDS_BASE - timeStart * CONST.MICROSECONDS_BASE))\n        if (!Array.isArray(searchResults)) {\n          searchResults.elapsed = elapsed\n        } else {\n          for (const sr of searchResults) {\n            sr.elapsed = elapsed\n          }\n        }\n        this.cache?.set(cacheKey, searchResults)\n      } catch (error: any) {\n        if (error.name !== 'AbortError') {\n          console.error('Search request failed', error)\n          throw error\n        }\n      }\n      this.addSearchResultsToCollector(searchResults, roundTripTime, query, cached)\n\n      return searchResults\n    }\n\n    if (shouldUseCache && this.cache) {\n      roundTripTime = 0\n      searchResults = this.cache.get(cacheKey) as OramaClientSearchResult<M>\n      cached = true\n      this.addSearchResultsToCollector(searchResults, roundTripTime, query, cached)\n    } else {\n      if (config?.debounce) {\n        return new Promise((resolve, reject) => {\n          clearTimeout(this.searchDebounceTimer)\n          this.searchDebounceTimer = setTimeout(async () => {\n            try {\n              await performSearch()\n              resolve(searchResults)\n            } catch (error) {\n              if ((error as any).name !== 'AbortError') {\n                console.error('Search request failed', error)\n                reject(error)\n              }\n            }\n          }, config?.debounce || 300)\n          if ('unref' in this.searchDebounceTimer) {\n            this.searchDebounceTimer.unref()\n          }\n        })\n      }\n      return performSearch()\n    }\n\n    if (currentRequestNumber === this.searchRequestCounter) {\n      return searchResults\n    }\n\n    return null\n  }\n\n  public async vectorSearch(query: ClientSearchParams, config?: SearchConfig): Promise<Pick<Results<AnyDocument>, 'hits' | 'elapsed'>> {\n    await this.initPromise\n\n    const cacheKey = `vectorSearch-${JSON.stringify(query)}`\n\n    let roundTripTime: number\n    let searchResults: Results<AnyDocument>\n    let cached = false\n\n    const shouldUseCache = config?.fresh !== true && this.cache?.has(cacheKey)\n    if (shouldUseCache === true && this.cache != null) {\n      roundTripTime = 0\n      searchResults = this.cache.get(cacheKey) as Results<AnyDocument>\n      cached = true\n    } else {\n      const timeStart = Date.now()\n      searchResults = await this.fetch<Results<AnyDocument>>('vector-search2', 'POST', { q: query }, config?.abortSignal ?? config?.abortController)\n      const timeEnd = Date.now()\n\n      searchResults.elapsed = await formatElapsedTime(BigInt(timeEnd * CONST.MICROSECONDS_BASE - timeStart * CONST.MICROSECONDS_BASE))\n      roundTripTime = timeEnd - timeStart\n\n      this.cache?.set(cacheKey, searchResults as OramaClientSearchResult<M>)\n    }\n\n    if (this.collector != null) {\n      this.collector.add({\n        rawSearchString: query.term,\n        resultsCount: searchResults.hits?.length ?? 0,\n        roundTripTime,\n        query,\n        cached,\n        searchedAt: new Date(),\n        userId: this.profile.getUserId()\n      })\n    }\n\n    return searchResults\n  }\n\n  public createAnswerSession(params?: AnswerSessionParams) {\n    return new AnswerSession({\n      inferenceType: params?.inferenceType || 'documentation',\n      initialMessages: params?.initialMessages || [],\n      oramaClient: this,\n      events: params?.events,\n      userContext: params?.userContext,\n      systemPrompts: params?.systemPrompts ?? []\n    })\n  }\n\n  public startHeartBeat(config: HeartBeatConfig): void {\n    this.heartbeat?.stop()\n    this.heartbeat = new HeartBeat({\n      ...config,\n      endpoint: `${this.endpoint}/health?api-key=${this.api_key}`\n    })\n    this.heartbeat.start()\n  }\n\n  public stopHeartBeat(): void {\n    this.heartbeat?.stop()\n  }\n\n  public async getPop(): Promise<string> {\n    const g = await this.initPromise\n    return g?.pop ?? ''\n  }\n\n  private expirationTimer: ReturnType<typeof setTimeout> | undefined\n  private init(): void {\n    let fetchParams: [Endpoint, Method, object?, AbortController?, Record<string, any>?] = [\n      'init',\n      'GET',\n      undefined,\n      undefined,\n      { token: this.customerUserToken }\n    ]\n\n    if (this.multiIndexSearch) {\n      fetchParams = ['init_multi_search', 'POST', { indexes: this.multiIndexIndexes }, undefined, { token: this.customerUserToken }]\n    }\n    this.initPromise = this.fetch<OramaInitResponse>(...fetchParams)\n      .then((b: OramaInitResponse) => {\n        this.collector?.setParams({\n          endpoint: b.collectUrl,\n          deploymentID: b.deploymentID,\n          index: b.index\n        })\n\n        this.profile?.setParams({\n          identifyUrl: b.collectUrl,\n          index: b.index\n        })\n\n        if (b.searchSession) {\n          if ('required' in b.searchSession && b.searchSession.required === true) {\n            this.blockSearchTillAuth = true\n          } else if ('token' in b.searchSession) {\n            const searchToken = b.searchSession.token\n            this.searchToken = searchToken\n            const maxAge = b.searchSession.maxAge\n            this.blockSearchTillAuth = false\n\n            if (this.expirationTimer) {\n              clearTimeout(this.expirationTimer)\n            }\n            this.expirationTimer = setTimeout(() => {\n              if (this.searchToken === searchToken) {\n                this.searchToken = undefined\n                this.blockSearchTillAuth = true\n                this.onAuthTokenExpired?.(searchToken)\n              }\n            }, maxAge * 1000)\n            if ('unref' in this.expirationTimer) {\n              this.expirationTimer.unref()\n            }\n          }\n        }\n\n        return b\n      })\n      .catch((err) => {\n        console.log(err)\n        return null\n      })\n  }\n\n  private async fetch<T = unknown>(\n    path: Endpoint,\n    method: Method,\n    body?: object,\n    abort?: AbortController | AbortSignal,\n    queryParams?: Record<string, string | undefined>\n  ): Promise<T> {\n    const abortSignal = isAbortController(abort) ? abort?.signal : abort\n    if (abortSignal?.aborted === true) {\n      throw new Error('Request aborted')\n    }\n\n    const requestOptions: RequestInit = {\n      method,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n        // Unfortunatelly we can't send this headers otherwise we should pay CORS preflight request\n        // 'x-orama-instance-id': this.id,\n        // 'x-orama-version': version\n      },\n      signal: abortSignal\n    }\n\n    if (method === 'POST' && body !== undefined) {\n      const b = body as any\n      b.version = version\n      b.id = this.id\n      b.visitorId = this.profile.getUserId()\n\n      requestOptions.body = Object.entries(b)\n        .filter(([_, value]) => !!value)\n        .map(([key, value]) => `${key}=${encodeURIComponent(JSON.stringify(value))}`)\n        .join('&')\n    }\n\n    const url = new URL(`${this.endpoint}/${path}`)\n    if (!this.multiIndexSearch) {\n      url.searchParams.append('api-key', this.api_key)\n    }\n    if (queryParams) {\n      for (const [key, value] of Object.entries(queryParams)) {\n        if (value) {\n          url.searchParams.append(key, value)\n        }\n      }\n    }\n    const res: Response = await fetch(url, requestOptions)\n\n    if (!res.ok) {\n      const error = new Error() as OramaError\n      error.httpResponse = res\n      throw error\n    }\n\n    return await res.json()\n  }\n\n  /**\n   * Methods associated with profile tracking\n   */\n  public getIdentity(): string | undefined {\n    return this.profile.getIdentity()\n  }\n\n  public getUserId(): string {\n    return this.profile.getUserId()\n  }\n\n  public getAlias(): string | undefined {\n    return this.profile.getAlias()\n  }\n\n  public async identify(identity: string): Promise<void> {\n    if (this.initPromise === undefined) {\n      throw new Error('OramaClient not initialized')\n    }\n\n    await this.profile.identify(this.initPromise, identity)\n  }\n\n  public async alias(alias: string): Promise<void> {\n    if (this.initPromise === undefined) {\n      throw new Error('OramaClient not initialized')\n    }\n\n    await this.profile.alias(this.initPromise, alias)\n  }\n\n  public reset(): void {\n    this.profile.reset()\n  }\n}\n", null, null, null, null, null, "{\n  \"name\": \"@oramacloud/client\",\n  \"version\": \"2.1.4\",\n  \"description\": \"Orama SDK client for Node.js, Deno, and Browsers\",\n  \"type\": \"module\",\n  \"sideEffects\": false,\n  \"main\": \"./dist/index.js\",\n  \"module\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"runkitExampleFilename\": \"./example/runkit.js\",\n  \"exports\": {\n    \"types\": \"./dist/index.d.ts\",\n    \"browser\": {\n      \"import\": \"./dist/index.js\",\n      \"require\": \"./dist/index.global.js\"\n    },\n    \"import\": \"./dist/index.js\",\n    \"require\": \"./dist/index.cjs\",\n    \"default\": \"./dist/index.js\"\n  },\n  \"scripts\": {\n    \"watch\": \"tsup --config tsup.lib.js --watch src\",\n    \"build\": \"tsup --config tsup.lib.js\",\n    \"test\": \"glob -c \\\"node --import tsx --no-warnings --test\\\" \\\"./tests/**/*.test.ts\\\"\",\n    \"serve:example\": \"esbuild src/index.ts --bundle --outfile=example/out.js --format=esm --watch --servedir=example\"\n  },\n  \"keywords\": [\n    \"orama\",\n    \"search engine\",\n    \"sdk\"\n  ],\n  \"files\": [\n    \"dist\",\n    \"example/runkit.js\"\n  ],\n  \"author\": {\n    \"name\": \"Michele Riva\",\n    \"email\": \"michele.riva@oramasearch.com\",\n    \"url\": \"https://github.com/MicheleRiva\"\n  },\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@orama/cuid2\": \"^2.2.3\",\n    \"@orama/orama\": \"^3.0.0\",\n    \"lodash\": \"^4.17.21\"\n  },\n  \"devDependencies\": {\n    \"@fastify/formbody\": \"^7.4.0\",\n    \"@types/lodash\": \"^4.14.202\",\n    \"@types/node\": \"^20.3.1\",\n    \"dotenv\": \"^16.3.1\",\n    \"esbuild\": \"0.18.5\",\n    \"fastify\": \"^4.19.2\",\n    \"glob\": \"^11.0.0\",\n    \"husky\": \"^8.0.3\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"ts-standard\": \"^12.0.2\",\n    \"tsup\": \"^8.3.0\",\n    \"tsx\": \"^4.7.0\",\n    \"typescript\": \"^5.1.3\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"ts-standard\": {\n    \"ignore\": [\n      \"dist\",\n      \"node_modules\"\n    ]\n  }\n}", "import { createId } from '@orama/cuid2'\nimport type { AnyDocument, AnyOrama, Nullable, Results, SearchParams } from '@orama/orama'\nimport type { OramaClient } from './client.js'\nimport { ORAMA_ANSWER_ENDPOINT } from './constants.js'\nimport { parseSSE, serializeUserContext } from './utils.js'\n\nexport type Context = Results<AnyDocument>['hits']\n\nexport type Message = {\n  role: 'user' | 'assistant'\n  content: string\n}\n\nexport type InferenceType = 'documentation'\n\nexport type AnswerParams<M extends boolean, UserContext = unknown> = {\n  initialMessages: Message[]\n  inferenceType: InferenceType\n  oramaClient: OramaClient<M>\n  userContext?: UserContext\n  events?: {\n    onMessageChange?: (messages: Message[]) => void\n    onMessageLoading?: (receivingMessage: boolean) => void\n    onAnswerAborted?: (aborted: true) => void\n    onSourceChange?: <T = AnyDocument>(sources: Results<T>) => void\n    onQueryTranslated?: (query: SearchParams<AnyOrama>) => void\n    onRelatedQueries?: (relatedQueries: string[]) => void\n    onNewInteractionStarted?: (interactionId: string) => void\n    onStateChange?: (state: Interaction[]) => void\n    onInteractionDone?: (interaction: Interaction) => void\n  }\n  systemPrompts?: string[]\n}\n\nexport type Interaction<T = AnyDocument> = {\n  interactionId: string\n  query: string\n  response: string\n  relatedQueries: Nullable<string[]>\n  sources: Nullable<Results<T>>\n  translatedQuery: Nullable<SearchParams<AnyOrama>>\n  segment: Nullable<string>\n  trigger: Nullable<string>\n  aborted: boolean\n  loading: boolean\n  error: boolean\n  errorMessage: string | null\n}\n\nexport type AskParams = SearchParams<AnyOrama> & {\n  userData?: unknown\n  related?: {\n    howMany?: 1 | 2 | 3 | 4 | 5\n    format?: 'question' | 'query'\n  }\n}\n\nexport class AnswerSession<M extends boolean> {\n  private messages: Message[]\n  private inferenceType: InferenceType\n  private oramaClient: OramaClient<M>\n  private endpoint: string\n  private abortController?: AbortController\n  private events: AnswerParams<M>['events']\n  private userContext?: AnswerParams<M>['userContext']\n  private conversationID: string\n  private lastInteractionParams?: AskParams\n  public state: Interaction[] = []\n  private systemPrompts?: string[]\n\n  constructor(params: AnswerParams<M>) {\n    // @ts-expect-error - sorry again TypeScript :-)\n    const oaramaAnswerHostAddress = params.oramaClient.answersApiBaseURL || ORAMA_ANSWER_ENDPOINT\n\n    this.messages = params.initialMessages || []\n    this.inferenceType = params.inferenceType\n    this.oramaClient = params.oramaClient\n    // @ts-expect-error - sorry TypeScript\n    this.endpoint = `${oaramaAnswerHostAddress}/v1/answer?api-key=${this.oramaClient.api_key}`\n    this.events = params.events\n    this.conversationID = createId()\n    this.userContext = params.userContext\n  }\n\n  public async askStream(params: AskParams): Promise<AsyncGenerator<string>> {\n    this.messages.push({ role: 'user', content: params.term ?? '' })\n    return this.fetchAnswer(params)\n  }\n\n  public async ask(params: AskParams): Promise<string> {\n    const generator = await this.askStream(params)\n    let result = ''\n    for await (const message of generator) {\n      result = message\n    }\n\n    if (this.events?.onMessageChange) {\n      this.events.onMessageChange(this.messages)\n    }\n\n    return result\n  }\n\n  public getMessages(): Message[] {\n    return this.messages\n  }\n\n  public clearSession(): void {\n    this.messages = []\n    this.state = []\n\n    if (this.events?.onMessageChange) {\n      this.events.onMessageChange(this.messages)\n    }\n\n    if (this.events?.onStateChange) {\n      this.events.onStateChange(this.state)\n    }\n  }\n\n  public abortAnswer() {\n    if (!this.abortController) {\n      throw new Error('AbortController is not ready')\n    }\n\n    this.abortController.abort()\n    this.abortController = undefined\n    this.state[this.state.length - 1].aborted = true\n  }\n\n  public async regenerateLast({ stream = true } = {}): Promise<string | AsyncGenerator<string>> {\n    if (this.state.length === 0 || this.messages.length === 0) {\n      throw new Error('No messages to regenerate')\n    }\n\n    const isLastMessageAssistant = this.messages.at(-1)?.role === 'assistant'\n\n    if (!isLastMessageAssistant) {\n      throw new Error('Last message is not an assistant message')\n    }\n\n    this.messages.pop()\n    this.state.pop()\n\n    if (stream) {\n      return this.askStream(this.lastInteractionParams as AskParams)\n    }\n\n    return this.ask(this.lastInteractionParams as AskParams)\n  }\n\n  private addNewEmptyAssistantMessage(): void {\n    this.messages.push({ role: 'assistant', content: '' })\n  }\n\n  private async *fetchAnswer(params: AskParams): AsyncGenerator<string> {\n    this.abortController = new AbortController()\n    this.lastInteractionParams = params\n    const interactionId = createId()\n\n    let reader: ReadableStreamDefaultReader | null = null\n\n    const currentStateIndex = this.state.length\n\n    this.state.push({\n      interactionId,\n      query: params.term ?? '',\n      response: '',\n      relatedQueries: null,\n      sources: null,\n      translatedQuery: null,\n      segment: null,\n      trigger: null,\n      aborted: false,\n      loading: true,\n      error: false,\n      errorMessage: null\n    })\n\n    try {\n      if (this.events?.onNewInteractionStarted) {\n        this.events.onNewInteractionStarted(interactionId)\n      }\n\n      if (this.events?.onStateChange) {\n        this.events.onStateChange(this.state)\n      }\n\n      const requestBody = new URLSearchParams()\n      requestBody.append('type', this.inferenceType)\n      requestBody.append('messages', JSON.stringify(this.messages))\n      requestBody.append('query', params.term ?? '')\n      requestBody.append('conversationId', this.conversationID)\n      requestBody.append('userId', this.oramaClient.getUserId())\n      // @ts-expect-error - yeah it's private but we need it here\n      requestBody.append('endpoint', this.oramaClient.endpoint)\n      requestBody.append('searchParams', JSON.stringify(params))\n      requestBody.append('identity', this.oramaClient.getIdentity() ?? '')\n      requestBody.append('interactionId', interactionId)\n      requestBody.append('alias', this.oramaClient.getAlias() ?? '')\n\n      const systemPromptConfiguration = this.getSystemPromptConfiguration()\n      if (systemPromptConfiguration) {\n        requestBody.append('systemPrompts', JSON.stringify(systemPromptConfiguration))\n      }\n\n      if (this.userContext) {\n        requestBody.append('userContext', serializeUserContext(this.userContext))\n      }\n\n      if (params.userData) {\n        requestBody.append('userData', serializeUserContext(params.userData))\n      }\n\n      if (params.related) {\n        if (params.related?.howMany && params.related?.howMany > 5) {\n          throw new Error('Can generate at most 5 related queries')\n        }\n\n        requestBody.append('related', JSON.stringify({ enabled: true, howMany: params.related.howMany ?? 3, format: params.related.format ?? 'question' }))\n      }\n\n      const response = await fetch(this.endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: requestBody.toString(),\n        signal: this.abortController.signal\n      })\n\n      if (!response.ok || !response.body) {\n        throw new Error(response.statusText)\n      }\n\n      reader = response.body.getReader()\n      const decoder = new TextDecoder()\n      const messageQueue: string[] = []\n      let buffer = ''\n\n      if (this.events?.onMessageLoading) {\n        this.events.onMessageLoading(true)\n      }\n\n      this.addNewEmptyAssistantMessage()\n\n      const lastMessage = this.messages.at(-1) as Message\n\n      while (true) {\n        const { value, done } = await reader.read()\n        if (done) break\n        buffer += decoder.decode(value, { stream: true })\n\n        // biome-ignore lint/suspicious/noImplicitAnyLet: <explanation>\n        let endOfMessageIndex\n\n        // biome-ignore lint/suspicious/noAssignInExpressions: this saves a variable allocation on each iteration\n        while ((endOfMessageIndex = buffer.indexOf('\\n\\n')) !== -1) {\n          const rawMessage = buffer.slice(0, endOfMessageIndex)\n          buffer = buffer.slice(endOfMessageIndex + 2)\n\n          try {\n            const event = parseSSE(rawMessage)\n            const parsedMessage = JSON.parse(event.data)\n\n            // MANAGE INCOMING SOURCES\n            if (parsedMessage.type === 'sources') {\n              this.state[currentStateIndex].sources = parsedMessage.message\n\n              if (this.events?.onSourceChange) {\n                this.events.onSourceChange(parsedMessage.message)\n              }\n\n              if (this.events?.onStateChange) {\n                this.events.onStateChange(this.state)\n              }\n\n              // MANAGE INCOMING TRANSLATED QUERY\n            } else if (parsedMessage.type === 'query-translated') {\n              this.state[currentStateIndex].translatedQuery = parsedMessage.message\n\n              if (this.events?.onQueryTranslated) {\n                this.events.onQueryTranslated(parsedMessage.message)\n              }\n\n              if (this.events?.onStateChange) {\n                this.events.onStateChange(this.state)\n              }\n\n              // MANAGE INCOMING METADATA\n            } else if (parsedMessage.type === 'conversation-metadata') {\n              const { segment, trigger } = parsedMessage.message\n              if (segment) {\n                this.state[currentStateIndex].segment = segment\n              }\n\n              if (trigger) {\n                this.state[currentStateIndex].trigger = trigger\n              }\n\n              if (this.events?.onStateChange) {\n                this.events.onStateChange(this.state)\n              }\n\n              // MANAGE INCOMING RELATED QUERIES\n            } else if (parsedMessage.type === 'related-queries') {\n              this.state[currentStateIndex].relatedQueries = parsedMessage.message\n\n              if (this.events?.onRelatedQueries) {\n                this.events.onRelatedQueries(parsedMessage.message)\n              }\n\n              if (this.events?.onStateChange) {\n                this.events.onStateChange(this.state)\n              }\n\n              // MANAGE INCOMING MESSAGE CHUNK\n            } else if (parsedMessage.type === 'text') {\n              messageQueue.push(parsedMessage.message)\n\n              // Process the message queue immediately, regardless of endOfBlock\n              while (messageQueue.length > 0) {\n                lastMessage.content += messageQueue.shift()\n                this.state[currentStateIndex].response = lastMessage.content\n\n                if (this.events?.onStateChange) {\n                  this.events.onStateChange(this.state)\n                }\n\n                if (this.events?.onMessageChange) {\n                  this.events.onMessageChange(this.messages)\n                }\n\n                yield lastMessage.content\n              }\n\n              // ALL OTHER CASES\n            } else {\n              // https://shorturl.at/PlUKm\n            }\n          } catch (e) {\n            console.error('Error parsing SSE event:', e)\n            console.error('Raw message:', rawMessage)\n          }\n        }\n      }\n    } catch (err: any) {\n      if (err.name === 'AbortError') {\n        this.state[currentStateIndex].aborted = true\n\n        if (this.events?.onAnswerAborted) {\n          this.events.onAnswerAborted(true)\n        }\n      } else {\n        this.state[currentStateIndex].error = true\n        this.state[currentStateIndex].errorMessage = err.message ?? 'Unknown error'\n        throw err\n      }\n    } finally {\n      reader?.releaseLock()\n      this.state[currentStateIndex].loading = false\n\n      if (this.events?.onStateChange) {\n        this.events.onStateChange(this.state)\n      }\n\n      if (this.events?.onInteractionDone) {\n        this.events.onInteractionDone(this.state[currentStateIndex])\n      }\n\n      if (this.events?.onMessageLoading) {\n        this.events.onMessageLoading(false)\n      }\n    }\n  }\n\n  /**\n   * Methods associated with custom system prompts\n   */\n  public setSystemPromptConfiguration(config: { systemPrompts: string[] }) {\n    if (Array.isArray(config.systemPrompts)) {\n      if (!config.systemPrompts.every((prompt) => typeof prompt === 'string')) {\n        throw new Error('Invalid system prompt configuration')\n      }\n\n      this.systemPrompts = config.systemPrompts\n    }\n\n    return this\n  }\n\n  public getSystemPromptConfiguration(): string[] | undefined {\n    return this.systemPrompts\n  }\n}\n", "export const MICROSECONDS_BASE = 1_000_000\n\nexport const DEFAULT_TELEMETRY_FLUSH_INTERVAL = 5000\n\nexport const DEFAULT_TELEMETRY_FLUSH_SIZE = 25\n\nexport const ORAMA_ANSWER_ENDPOINT = 'https://answer.api.orama.com'\n\nexport const MULTI_INDEX_BASE = '/v1/indexes'\n\nexport const LOCAL_STORAGE_USER_ID_KEY = 'orama_user_id'\nexport const LOCAL_STORAGE_SERVER_SIDE_SESSION_KEY = 'server-side-session'\n", "export const hasLocalStorage = typeof localStorage !== 'undefined'\n\ntype SSESourcePayload = {\n  type: 'sources'\n  message: object\n}\n\ntype SSETextStreamPayload = {\n  type: 'text'\n  message: string\n  endOfBlock: boolean\n}\n\ntype SSEParsedPayload = SSESourcePayload | SSETextStreamPayload\n\ntype SSEPayload = {\n  data: string\n  event: string\n}\n\nexport function throttle(func: (...args: any[]) => any, limit: number) {\n  let inThrottle: boolean\n  return function (...args: any[]) {\n    if (!inThrottle) {\n      func.apply(this, args)\n      inThrottle = true\n      // biome-ignore lint/suspicious/noAssignInExpressions: saves variable declaration\n      setTimeout(() => (inThrottle = false), limit)\n    }\n  }\n}\n\nexport function debounce(func: (...args: any[]) => any, delay: number) {\n  let debounceTimer: NodeJS.Timeout\n  return function (...args: any[]) {\n    clearTimeout(debounceTimer)\n    debounceTimer = setTimeout(() => func.apply(this, args), delay)\n  }\n}\n\nexport function parseSSE(input: string): SSEPayload {\n  const [event, ...data] = input.split('\\n')\n  const eventData = data.join('\\n').replace('data: ', '')\n\n  return {\n    event: event.replace('event: ', ''),\n    data: eventData\n  }\n}\n\nexport function serializeUserContext(userContext: unknown): string {\n  if (typeof userContext === 'object') {\n    return JSON.stringify(userContext)\n  }\n\n  return `${userContext}`\n}\n", "import type { CacheConfig, Optional } from './types.js'\n\ntype CacheMap<T = unknown> = Map<string, T>\n\nexport class Cache<V = unknown> {\n  private readonly cache: CacheMap<V>\n  private readonly config: CacheConstructorParams\n\n  constructor(config: CacheConstructorParams) {\n    this.cache = new Map()\n    this.config = config\n  }\n\n  public set(key: string, value: V): void {\n    this.cache.set(key, value)\n  }\n\n  public get(key: string): Optional<V> {\n    return this.cache.get(key)\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key)\n  }\n\n  public delete(key: string): boolean {\n    return this.cache.delete(key)\n  }\n\n  public clear(): void {\n    this.cache.clear()\n  }\n\n  public size(): number {\n    return this.cache.size\n  }\n}\n\nexport interface CacheConstructorParams extends CacheConfig {}\n", "export default function sendBeacon(endpoint: string, body?: string): Promise<Response> | undefined {\n  if (typeof navigator !== 'undefined') {\n    if (typeof navigator.sendBeacon !== 'undefined') {\n      navigator.sendBeacon(endpoint, body)\n    }\n    return\n  }\n\n  fetch(endpoint, {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(\n    () => {},\n    (e) => console.log(e)\n  )\n}\n", "import pkg from '../package.json'\nimport type { Profile } from './profile.js'\nimport sendBeacon from './sendBeacon.js'\nimport type { ICollector, SearchEvent, TelemetryConfig } from './types.js'\n\ntype Data = any[]\n\nexport class Collector {\n  private data: Data\n  private params?: ICollector\n  private readonly config: CollectorConstructor\n  private readonly profile: Profile\n\n  private constructor(config: CollectorConstructor, profile: Profile) {\n    this.data = []\n    this.config = config\n    this.profile = profile\n  }\n\n  public setParams(params: ICollector): void {\n    this.params = params\n  }\n\n  public static create(config: CollectorConstructor, profile: Profile): Collector {\n    const collector = new Collector(config, profile)\n    collector.start()\n    return collector\n  }\n\n  public add(data: SearchEvent): void {\n    this.data.push({\n      rawSearchString: data.rawSearchString,\n      query: data.query,\n      resultsCount: data.resultsCount,\n      roundTripTime: data.roundTripTime,\n      searchedAt: data.searchedAt,\n      userId: this.profile.getUserId(),\n      identity: this.profile.getIdentity(),\n      alias: this.profile.getAlias(),\n      // The referer is different for every event:\n      // the user can search in different pages of the website\n      // and the referer will be different for each page\n      referer: typeof location !== 'undefined' ? location.toString() : undefined\n    })\n\n    if (this.params != null && this.data.length >= this.config.flushSize) {\n      this.flush()\n    }\n  }\n\n  public flush(): void {\n    if (this.params == null || this.data.length === 0) {\n      return\n    }\n\n    // Swap out the data array *sync*\n    // so that we can continue to collect events\n    const data = this.data\n    this.data = []\n\n    const body = {\n      source: 'fe',\n      deploymentID: this.params.deploymentID,\n      index: this.params.index,\n      oramaId: this.config.id,\n      oramaVersion: pkg.version,\n      // The user agent is the same for every event\n      // Because we use \"application/x-www-form-urlencoded\",\n      // the browser doens't send the user agent automatically\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : undefined,\n      events: data\n    }\n\n    sendBeacon(`${this.params.endpoint}?api-key=${this.config.api_key}`, JSON.stringify(body))?.catch((err) => console.log(err))\n  }\n\n  private start(): void {\n    const interval = setInterval(this.flush.bind(this), this.config.flushInterval)\n    if (interval.unref != null) {\n      interval.unref()\n    }\n  }\n}\n\nexport interface CollectorConstructor extends TelemetryConfig {\n  id: string\n  api_key: string\n}\n", "import sendBeacon from './sendBeacon.js'\nimport type { HeartBeatConfig } from './types.js'\n\nexport class HeartBeat {\n  private intervalId?: number\n\n  constructor(private readonly params: HeartBeatConstructor) {}\n\n  public start(): void {\n    this.stop()\n    // @ts-expect-error - setInterval ID is actually a number\n    this.intervalId = setInterval(this.beat.bind(this), this.params.frequency)\n  }\n\n  public stop(): void {\n    if (this.intervalId !== undefined) {\n      clearInterval(this.intervalId)\n    }\n  }\n\n  private beat(): void {\n    sendBeacon(this.params.endpoint)?.catch((err) => console.log(err))\n  }\n}\n\nexport interface HeartBeatConstructor extends HeartBeatConfig {\n  endpoint: string\n}\n", "import { createId } from '@orama/cuid2'\nimport { LOCAL_STORAGE_USER_ID_KEY } from './constants.js'\nimport sendBeacon from './sendBeacon.js'\nimport type { OramaInitResponse } from './types.js'\n\ntype ProfileConstructor = {\n  endpoint: string\n  apiKey: string\n}\n\ntype ProfileParams = {\n  identifyUrl: string\n  index: string\n}\n\nexport class Profile {\n  private readonly endpoint: string\n  private readonly apiKey: string\n\n  private userId: string\n  private identity?: string\n  private userAlias?: string\n  private params?: ProfileParams\n\n  constructor({ endpoint, apiKey }: ProfileConstructor) {\n    if (!endpoint || !apiKey) {\n      throw new Error('Endpoint and API Key are required to create a Profile')\n    }\n\n    if (typeof endpoint !== 'string' || typeof apiKey !== 'string') {\n      throw new Error('Endpoint and API Key must be strings')\n    }\n\n    if (typeof localStorage !== 'undefined') {\n      // Browser side\n      const userId = localStorage.getItem(LOCAL_STORAGE_USER_ID_KEY)\n\n      if (userId) {\n        this.userId = userId\n      } else {\n        this.userId = createId()\n        localStorage.setItem(LOCAL_STORAGE_USER_ID_KEY, this.userId)\n      }\n    } else {\n      // Server side\n      this.userId = createId()\n    }\n\n    this.endpoint = endpoint\n    this.apiKey = apiKey\n  }\n\n  setParams(params: ProfileParams) {\n    const { protocol, host } = new URL(params.identifyUrl)\n    const telemetryDomain = `${protocol}//${host}/identify`\n\n    this.params = {\n      identifyUrl: telemetryDomain,\n      index: params.index\n    }\n  }\n\n  getIdentity() {\n    return this.identity\n  }\n\n  getUserId() {\n    return this.userId\n  }\n\n  getAlias() {\n    return this.userAlias\n  }\n\n  private async sendProfileData(data: Record<string, any>) {\n    if (!this.params) {\n      throw new Error('Orama Profile is not initialized')\n    }\n\n    const body = JSON.stringify({\n      ...data,\n      visitorId: this.getUserId(),\n      index: this.params.index\n    })\n\n    await sendBeacon(`${this.params?.identifyUrl}?api-key=${this.apiKey}`, body)\n  }\n\n  async identify(initPromise: Promise<OramaInitResponse | null>, identity: string) {\n    if (typeof identity !== 'string') {\n      throw new Error('Identity must be a string')\n    }\n\n    await initPromise\n\n    await this.sendProfileData({\n      entity: 'identity',\n      id: identity\n    })\n\n    this.identity = identity\n  }\n\n  async alias(initPromise: Promise<OramaInitResponse | null>, alias: string) {\n    if (typeof alias !== 'string') {\n      throw new Error('Identity must be a string')\n    }\n\n    await initPromise\n\n    await this.sendProfileData({\n      entity: 'alias',\n      id: alias\n    })\n\n    this.userAlias = alias\n  }\n\n  reset() {\n    this.userId = createId()\n    this.identity = undefined\n    this.userAlias = undefined\n  }\n}\n", "export const ENDPOINT_SNAPSHOT = 'snapshot'\nexport const ENDPOINT_NOTIFY = 'notify'\nexport const ENDPOINT_DEPLOY = 'deploy'\nexport const ENDPOINT_HAS_DATA = 'has-data'\nexport const ENDPOINT_UPDATE_SCHEMA = 'update-schema'\n\nexport const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\nexport const METHOD_PUT = 'PUT'\nexport const METHOD_DELETE = 'DELETE'\n\nexport const API_BASE_URL = 'https://api.askorama.ai'\nexport const API_V1_BASE_URL = `${API_BASE_URL}/api/v1`\n", "import type { Nullable } from '@orama/orama'\nimport * as CONST from './constants.js'\nimport type { CloudManager } from './index.js'\nimport type { Endpoint, EndpointDeploy, EndpointHasData, EndpointNotify, EndpointSnapshot, EndpointUpdateSchema } from './types.js'\n\ntype IndexManagerParams = {\n  manager: CloudManager\n  indexID: string\n}\n\ntype SnapshotData = any[] | object | unknown\n\ntype CallWebhookPayload<E extends Endpoint> = E extends EndpointSnapshot\n  ? SnapshotData\n  : E extends EndpointNotify\n    ? any[]\n    : E extends EndpointDeploy\n      ? undefined\n      : E extends EndpointUpdateSchema\n        ? { schema: { [key: string]: any }; embeddings?: any }\n        : never\n\nexport class IndexManager {\n  private manager: CloudManager\n  private indexId: Nullable<string> = null\n\n  constructor(params: IndexManagerParams) {\n    this.manager = params.manager\n    this.indexId = params.indexID\n\n    this.manager.setIndexID(params.indexID)\n  }\n\n  public async empty(): Promise<boolean> {\n    const resp = await this.callIndexWebhook<EndpointSnapshot>(CONST.ENDPOINT_SNAPSHOT, [])\n    return (resp as any).success\n  }\n\n  public async snapshot(data: CallWebhookPayload<EndpointSnapshot>): Promise<boolean> {\n    const resp = await this.callIndexWebhook<EndpointSnapshot>(CONST.ENDPOINT_SNAPSHOT, data)\n    return (resp as any).success\n  }\n\n  public async insert(data: CallWebhookPayload<EndpointNotify>): Promise<boolean> {\n    const resp = await this.callIndexWebhook<EndpointNotify>(CONST.ENDPOINT_NOTIFY, { upsert: data } as any)\n    return (resp as any).success\n  }\n\n  public async update(data: CallWebhookPayload<EndpointNotify>): Promise<boolean> {\n    const resp = await this.callIndexWebhook<EndpointNotify>(CONST.ENDPOINT_NOTIFY, { upsert: data } as any)\n    return (resp as any).success\n  }\n\n  public async delete(data: CallWebhookPayload<EndpointNotify>): Promise<boolean> {\n    try {\n      await this.callIndexWebhook<EndpointNotify>(CONST.ENDPOINT_NOTIFY, { remove: data } as any)\n    } catch (e) {\n      console.error(e)\n      return false\n    }\n\n    return true\n  }\n\n  public async updateSchema(schema: CallWebhookPayload<EndpointUpdateSchema>): Promise<boolean> {\n    try {\n      await this.callIndexWebhook<EndpointUpdateSchema>(CONST.ENDPOINT_UPDATE_SCHEMA, schema)\n    } catch (e) {\n      console.error(e)\n      return false\n    }\n    return true\n  }\n\n  public async deploy(): Promise<boolean> {\n    try {\n      const resp = await this.callIndexWebhook<EndpointDeploy>(CONST.ENDPOINT_DEPLOY)\n    } catch (e) {\n      console.error(e)\n      return false\n    }\n\n    return true\n  }\n\n  public async hasPendingOperations(): Promise<boolean> {\n    const resp = await this.callIndexWebhook<EndpointHasData>(CONST.ENDPOINT_HAS_DATA)\n    return (resp as any).hasData\n  }\n\n  private checkIndexID() {\n    if (!this.indexId) {\n      throw new Error('Index ID is not set')\n    }\n  }\n\n  private callIndexWebhook<E extends Endpoint>(endpoint: E, payload?: CallWebhookPayload<E>) {\n    this.checkIndexID()\n    return this.manager.callIndexWebhook(endpoint, payload)\n  }\n}\n", "import type { Nullable, insert } from '@orama/orama'\nimport { API_V1_BASE_URL } from './constants.js'\nimport { IndexManager } from './index-manager.js'\nimport type { Endpoint, Method } from './types.js'\n\ntype CloudManagerConfig = {\n  api_key: string\n  baseURL?: string\n}\n\ntype CallConfig = {\n  method: Method\n  headers: {\n    'Content-Type': string\n    Authorization: string\n  }\n  body?: string\n}\n\ntype Payload = UpsertPayload | RemovePayload | InsertPayload\n\ntype UpsertPayload = {\n  upsert: any[]\n}\n\ntype RemovePayload = {\n  remove: any[]\n}\n\ntype InsertPayload = {\n  insert: any[]\n}\n\nexport class CloudManager {\n  private indexId: Nullable<string> = null\n  private apiKey: string\n  private baseURL: string\n\n  constructor(config: CloudManagerConfig) {\n    this.apiKey = config.api_key\n    this.baseURL = config?.baseURL || API_V1_BASE_URL\n  }\n\n  index(indexId: string): IndexManager {\n    return new IndexManager({ manager: this, indexID: indexId })\n  }\n\n  setIndexID(id: string) {\n    this.indexId = id\n  }\n\n  async callIndexWebhook<T = unknown>(endpoint: Endpoint, payload?: T): Promise<Response> {\n    const config: CallConfig = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.apiKey}`\n      }\n    }\n\n    if (payload) {\n      config.body = JSON.stringify(payload)\n    }\n\n    const resp = await fetch(`${this.baseURL}/webhooks/${this.indexId}/${endpoint}`, config)\n\n    return resp.json()\n  }\n}\n"],
  "mappings": "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",
  "names": ["exports", "isBytes", "number", "bool", "bytes", "hash", "exists", "output", "n", "b", "a", "lengths", "h", "instance", "checkFinished", "out", "min", "assert", "fromBig", "split", "add", "U32_MASK64", "_32n", "le", "lst", "Ah", "Al", "i", "l", "toBig", "shrSH", "_l", "s", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "_h", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "Bh", "Bl", "add3L", "Cl", "add3H", "low", "Ch", "add4L", "Dl", "add4H", "Dh", "add5L", "El", "add5H", "Eh", "u64", "byteSwap32", "bytesToHex", "hexToBytes", "asyncLoop", "utf8ToBytes", "toBytes", "concatBytes", "checkOpts", "wrapConstructor", "wrapConstructorWithOpts", "wrapXOFConstructorWithOpts", "randomBytes", "crypto_1", "_assert_js_1", "u8", "arr", "u32", "createView", "rotr", "word", "shift", "rotl", "byteSwap", "hexes", "_", "hex", "asciis", "asciiToBase16", "char", "hl", "al", "array", "ai", "hi", "n1", "n2", "nextTick", "iters", "tick", "cb", "ts", "diff", "str", "data", "arrays", "sum", "res", "pad", "Hash", "toStr", "defaults", "opts", "hashCons", "hashC", "msg", "tmp", "bytesLength", "keccakP", "_u64_js_1", "utils_js_1", "SHA3_PI", "SHA3_ROTL", "_SHA3_IOTA", "_0n", "_1n", "_2n", "_7n", "_256n", "_0x71n", "round", "R", "x", "y", "t", "j", "SHA3_IOTA_H", "SHA3_IOTA_L", "rotlH", "rotlL", "rounds", "B", "idx1", "idx0", "B0", "B1", "Th", "Tl", "curH", "curL", "PI", "Keccak", "_Keccak", "blockLen", "suffix", "outputLen", "enableXOF", "state", "len", "pos", "take", "bufferOut", "to", "gen", "genShake", "require_src", "__commonJSMin", "module", "sha3", "defaultLength", "bigLength", "createEntropy", "length", "random", "entropy", "bufToBigInt", "buf", "bits", "value", "bi", "input", "alphabet", "randomLetter", "createFingerprint", "globalObj", "globals", "sourceString", "createCounter", "count", "initialCountMax", "init", "counter", "fingerprint", "firstLetter", "time", "salt", "hashInput", "createId", "isCuid", "id", "minLength", "maxLength", "regex", "require_cuid2", "getConstants", "import_cuid2", "STEMMERS", "SUPPORTED_LANGUAGES", "baseId", "nano", "milli", "second", "formatNanoseconds", "withIntersection", "withUnion", "allLanguages", "errors", "formatElapsedTime", "c", "v", "C", "V", "mgr0", "meq1", "mgr1", "s_v", "version", "package_default", "ORAMA_ANSWER_ENDPOINT", "MULTI_INDEX_BASE", "LOCAL_STORAGE_USER_ID_KEY", "parseSSE", "event", "eventData", "serializeUserContext", "userContext", "AnswerSession", "params", "oaramaAnswerHostAddress", "generator", "result", "message", "stream", "interactionId", "reader", "currentStateIndex", "requestBody", "systemPromptConfiguration", "response", "decoder", "messageQueue", "buffer", "lastMessage", "done", "endOfMessageIndex", "rawMessage", "parsedMessage", "segment", "trigger", "e", "err", "config", "prompt", "Cache", "key", "sendBeacon", "endpoint", "body", "Collector", "_Collector", "profile", "collector", "interval", "HeartBeat", "Profile", "apiKey", "userId", "protocol", "host", "telemetryDomain", "initPromise", "identity", "alias", "isAbortController", "signal", "OramaClient", "firstEndpointOrigin", "telementryConfig", "cacheParams", "customerAuthToken", "onAuthTokenExpired", "searchResults", "roundTripTime", "query", "cached", "sr", "currentRequestNumber", "cacheKey", "shouldUseCache", "performSearch", "timeStart", "timeEnd", "elapsed", "_a", "error", "resolve", "reject", "fetchParams", "searchToken", "maxAge", "path", "method", "abort", "queryParams", "abortSignal", "requestOptions", "url", "ENDPOINT_SNAPSHOT", "ENDPOINT_NOTIFY", "ENDPOINT_DEPLOY", "ENDPOINT_HAS_DATA", "ENDPOINT_UPDATE_SCHEMA", "API_BASE_URL", "API_V1_BASE_URL", "IndexManager", "schema", "resp", "payload", "CloudManager", "indexId"]
}
