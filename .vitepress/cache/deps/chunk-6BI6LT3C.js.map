{
  "version": 3,
  "sources": ["../../../node_modules/@orama/wc-components/dist/esm/@stencil/core/internal/app-data", "../../../node_modules/@orama/wc-components/node_modules/.pnpm/@stencil+core@4.19.0/node_modules/@stencil/core/internal/client/index.js?app-data=conditional"],
  "sourcesContent": ["export const NAMESPACE = 'orama-ui';\nexport const BUILD = /* orama-ui */ { allRenderFn: true, appendChildSlotFix: false, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: false, cmpDidLoad: true, cmpDidRender: false, cmpDidUnload: false, cmpDidUpdate: true, cmpShouldUpdate: true, cmpWillLoad: true, cmpWillRender: false, cmpWillUpdate: false, connectedCallback: true, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: true, element: false, event: true, experimentalScopedSlotChanges: false, experimentalSlotFixes: false, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: true, hostListenerTargetDocument: true, hostListenerTargetParent: false, hostListenerTargetWindow: false, hotModuleReplacement: false, hydrateClientSide: false, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, hydratedSelectorName: \"hydrated\", initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: false, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: false, scoped: true, scopedSlotTextContentFix: false, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, slot: true, slotChildNodesFix: false, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: true, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* orama-ui */ {};\n", "/*\n Stencil Client Platform v4.19.0 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar hostRefs = BUILD2.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD2.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD2.method && BUILD2.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD2.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD3.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD4.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD4.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD4.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD4.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/client/client-window.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = BUILD5.shadowDom;\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD5.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD6.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD6.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD7.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD7.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD7.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD8.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD8.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD8.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD8.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD8.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD8.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD8.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD8.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD8.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD8.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD8.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD8.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const shadowRootNodes = BUILD9.shadowDom && shadowRoot ? [] : null;\n  const vnode = hostRef.$vnode$ = newVNode(tagName, null);\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map((c) => {\n    const orgLocationId = c.$hostId$ + \".\" + c.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = c.$elm$;\n    if (orgLocationNode && supportsShadow && orgLocationNode[\"s-en\"] === \"\") {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName;\n      if (orgLocationNode) {\n        node[\"s-ol\"] = orgLocationNode;\n        node[\"s-ol\"][\"s-nr\"] = node;\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n  if (BUILD9.shadowDom && shadowRoot) {\n    shadowRootNodes.map((shadowRootNode) => {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $text$: null\n        };\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        parentVNode.$children$[childVNode.$index$] = childVNode;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    for (i2 = node.childNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        node.childNodes[i2],\n        hostId\n      );\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId\n        );\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = {\n        $flags$: 0,\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4],\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      };\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          if (childIdSplt[5]) {\n            node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5];\n          } else {\n            node[\"s-sn\"] = \"\";\n          }\n          node[\"s-sr\"] = true;\n          if (BUILD9.shadowDom && shadowRootNodes) {\n            childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n            if (childVNode.$name$) {\n              childVNode.$elm$.setAttribute(\"name\", childVNode.$name$);\n            }\n            node.parentNode.insertBefore(childVNode.$elm$, node);\n            node.remove();\n            if (childVNode.$depth$ === \"0\") {\n              shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n            }\n          }\n          slotNodes.push(childVNode);\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          }\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD9.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD9.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    let i2 = 0;\n    for (; i2 < node.childNodes.length; i2++) {\n      initializeDocumentHydrate(node.childNodes[i2], orgLocNodes);\n    }\n    if (node.shadowRoot) {\n      for (i2 = 0; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD18 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD10.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD10.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD10.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD17, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD12 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD11.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD12.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const styleContainerDocument = styleContainerNode;\n  const styleContainerShadowRoot = styleContainerNode;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD13.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerDocument.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD13.hydrateClientSide && styleContainerShadowRoot.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if (BUILD13.hydrateServerSide || BUILD13.hotModuleReplacement) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector(\"link\"));\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD13.constructableCSS && !styleContainerDocument.adoptedStyleSheets.includes(style)) {\n      styleContainerDocument.adoptedStyleSheets = [...styleContainerDocument.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD13.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD13.shadowDom || BUILD13.scoped) && BUILD13.cssAnnotations && flags & 10 /* needsScopedEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD13.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD13.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\nvar convertScopedToShadow = (css) => css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, \"$1{\");\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD14.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD14.vdomStyle && memberName === \"style\") {\n      if (BUILD14.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD14.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD14.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD14.vdomKey && memberName === \"key\") {\n    } else if (BUILD14.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD14.vdomListener && (BUILD14.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD14.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD14.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD14.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD14.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD15.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD16.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD16.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD16.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD16.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD16.isDebug || BUILD16.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD16.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD16.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      !useNativeShadowDom && BUILD16.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      !useNativeShadowDom && BUILD16.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD16.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD16.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    if ((BUILD16.shadowDom || BUILD16.scoped) && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (BUILD16.scoped) {\n      updateElementScopeIds(elm, parentElm);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD16.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD16.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD16.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.childNodes).find((ref) => ref[\"s-cr\"]);\n    const childNodeArray = Array.from(parentElm.childNodes);\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD16.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(parentReferenceNode(childNode), childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD16.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD16.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD16.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD16.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD16.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD16.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD16.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD16.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD16.slotRelocation) {\n          insertBefore(parentReferenceNode(oldStartVnode.$elm$), node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD16.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD16.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD16.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD16.vdomText || text === null) {\n    if (BUILD16.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD16.vdomAttribute || BUILD16.reflect) {\n      if (BUILD16.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD16.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD16.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD16.updatable && BUILD16.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (BUILD16.updatable && oldChildren !== null) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD16.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD16.vdomText && BUILD16.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD16.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  for (const childNode of elm.childNodes) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD16.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD16.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  const inserted = parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  if (BUILD16.scoped) {\n    updateElementScopeIds(newNode, parent);\n  }\n  return inserted;\n};\nvar findScopeIds = (element) => {\n  const scopeIds = [];\n  if (element) {\n    scopeIds.push(\n      ...element[\"s-scs\"] || [],\n      element[\"s-si\"],\n      element[\"s-sc\"],\n      ...findScopeIds(element.parentElement)\n    );\n  }\n  return scopeIds;\n};\nvar updateElementScopeIds = (element, parent, iterateChildNodes = false) => {\n  var _a;\n  if (element && parent && element.nodeType === 1 /* ElementNode */) {\n    const scopeIds = new Set(findScopeIds(parent).filter(Boolean));\n    if (scopeIds.size) {\n      (_a = element.classList) == null ? void 0 : _a.add(...element[\"s-scs\"] = [...scopeIds]);\n      if (element[\"s-ol\"] || iterateChildNodes) {\n        for (const childNode of Array.from(element.childNodes)) {\n          updateElementScopeIds(childNode, element, true);\n        }\n      }\n    }\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD16.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD16.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD16.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD16.scoped || BUILD16.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD16.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD16.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD16.isDebug || BUILD16.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD16.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD16.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD16.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    for (const childNode of rootVnode.$elm$.childNodes) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD17.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD17.taskQueue && BUILD17.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD17.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD17.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD17.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD17.lazyLoad && BUILD17.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD17.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD17.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD17.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {\n  console.error(err2);\n  fn();\n}) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD17.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD17.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD17.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD17.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD17.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD17.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD17.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD17.allRenderFn ? true : false;\n  const lazyLoad = BUILD17.lazyLoad ? true : false;\n  const taskQueue = BUILD17.taskQueue ? true : false;\n  const updatable = BUILD17.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD17.hasRenderFn || BUILD17.reflect) {\n      if (BUILD17.vdomRender || BUILD17.reflect) {\n        if (BUILD17.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD17.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD17.cmpDidRender) {\n    if (BUILD17.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD17.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD17.asyncLoading && BUILD17.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD17.cmpDidLoad) {\n      if (BUILD17.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD17.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD17.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD17.cmpDidUpdate) {\n      if (BUILD17.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD17.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD17.method && BUILD17.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD17.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD17.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD17.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD17.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD17.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD17.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD17.hydratedClass ? elm.classList.add((_a = BUILD17.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD17.hydratedAttribute ? elm.setAttribute((_b = BUILD17.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD18.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD18.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD18.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD18.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD18.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD18.lazyLoad || instance) {\n      if (BUILD18.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD18.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD18.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a, _b;\n  const prototype = Cstr.prototype;\n  if (BUILD19.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach(\n      (cbName) => Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const elm = BUILD19.lazyLoad ? hostRef.$hostElement$ : this;\n          const instance = BUILD19.lazyLoad ? hostRef.$lazyInstance$ : elm;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((instance2) => {\n              const cb = instance2[cbName];\n              typeof cb === \"function\" && cb.call(instance2, ...args);\n            });\n          } else {\n            const cb = instance[cbName];\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      })\n    );\n  }\n  if (BUILD19.member && cmpMeta.$members$ || BUILD19.watchCallback && (cmpMeta.$watchers$ || Cstr.watchers)) {\n    if (BUILD19.watchCallback && Cstr.watchers && !cmpMeta.$watchers$) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD19.prop || BUILD19.state) && (memberFlags & 31 /* Prop */ || (!BUILD19.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        Object.defineProperty(prototype, memberName, {\n          get() {\n            return getValue(this, memberName);\n          },\n          set(newValue) {\n            if (BUILD19.isDev) {\n              const ref = getHostRef(this);\n              if (\n                // we are proxying the instance (not element)\n                (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                (memberFlags & 1024 /* Mutable */) === 0\n              ) {\n                consoleDevWarn(\n                  `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                );\n              }\n            }\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (BUILD19.lazyLoad && BUILD19.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD19.observeAttribute && (!BUILD19.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD19.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD19.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD19.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD20.lazyLoad || BUILD20.hydrateClientSide) && bundleId) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD20.member && !Cstr.isProxied) {\n        if (BUILD20.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD20.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD20.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD20.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD20.style && Cstr && Cstr.style) {\n      let style;\n      if (typeof Cstr.style === \"string\") {\n        style = Cstr.style;\n      } else if (BUILD20.mode && typeof Cstr.style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = Cstr.style[hostRef.$modeName$];\n        }\n        if (BUILD20.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD20.hydrateServerSide && BUILD20.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD20.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2, false));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD20.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD20.lazyLoad && BUILD20.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD21.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD21.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD21.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD21.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD21.slotRelocation && !hostId) {\n        if (BUILD21.hydrateServerSide || (BUILD21.slot || BUILD21.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD21.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD21.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD21.prop && !BUILD21.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD21.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD21.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD22.lazyLoad && BUILD22.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD22.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD22.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD22.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar patchPseudoShadowDom = (hostElementPrototype, descriptorPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype, descriptorPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD23.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD23.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      for (; i2 < srcNode.childNodes.length; i2++) {\n        slotted = srcNode.childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !srcNode.childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD23.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(srcNode.childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const slotNode = getHostSlotNode(this.childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode) {\n        const slotChildNodes = getHostSlotChildNodes(slotNode, toRemove[\"s-sn\"]);\n        const existingNode = slotChildNodes.find((n) => n === toRemove);\n        if (existingNode) {\n          existingNode.remove();\n          updateFallbackSlotVisibility(this);\n          return;\n        }\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  const originalPrepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const slotNode = getHostSlotNode(this.childNodes, slotName, this.tagName);\n      if (slotNode) {\n        const slotPlaceholder = document.createTextNode(\"\");\n        slotPlaceholder[\"s-nr\"] = newChild;\n        slotNode[\"s-cr\"].parentNode.__appendChild(slotPlaceholder);\n        newChild[\"s-ol\"] = slotPlaceholder;\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return originalPrepend.call(this, newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  const descriptor = Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  if (BUILD23.experimentalScopedSlotChanges) {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      // To mimic shadow root behavior, we need to return the text content of all\n      // nodes in a slot reference node\n      get() {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        const textContent = slotRefNodes.map((node) => {\n          var _a, _b;\n          const text = [];\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            if (slotContent.nodeType === 3 /* TEXT_NODE */ || slotContent.nodeType === 1 /* ELEMENT_NODE */) {\n              text.push((_b = (_a = slotContent.textContent) == null ? void 0 : _a.trim()) != null ? _b : \"\");\n            }\n            slotContent = slotContent.nextSibling;\n          }\n          return text.filter((ref) => ref !== \"\").join(\" \");\n        }).filter((text) => text !== \"\").join(\" \");\n        return \" \" + textContent + \" \";\n      },\n      // To mimic shadow root behavior, we need to overwrite all nodes in a slot\n      // reference node. If a default slot reference node exists, the text content will be\n      // placed there. Otherwise, the new text node will be hidden\n      set(value) {\n        const slotRefNodes = getAllChildSlotNodes(this.childNodes);\n        slotRefNodes.forEach((node) => {\n          let slotContent = node.nextSibling;\n          while (slotContent && slotContent[\"s-sn\"] === node[\"s-sn\"]) {\n            const tmp = slotContent;\n            slotContent = slotContent.nextSibling;\n            tmp.remove();\n          }\n          if (node[\"s-sn\"] === \"\") {\n            const textNode = this.ownerDocument.createTextNode(value);\n            textNode[\"s-sn\"] = \"\";\n            insertBefore(node.parentElement, textNode, node.nextSibling);\n          } else {\n            node.remove();\n          }\n        });\n      }\n    });\n  } else {\n    Object.defineProperty(hostElementPrototype, \"textContent\", {\n      get() {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          return slotNode.nextSibling.textContent;\n        } else if (slotNode) {\n          return slotNode.textContent;\n        } else {\n          return this.__textContent;\n        }\n      },\n      set(value) {\n        var _a;\n        const slotNode = getHostSlotNode(this.childNodes, \"\", this.tagName);\n        if (((_a = slotNode == null ? void 0 : slotNode.nextSibling) == null ? void 0 : _a.nodeType) === 3 /* TEXT_NODE */) {\n          slotNode.nextSibling.textContent = value;\n        } else if (slotNode) {\n          slotNode.textContent = value;\n        } else {\n          this.__textContent = value;\n          const contentRefElm = this[\"s-cr\"];\n          if (contentRefElm) {\n            insertBefore(this, contentRefElm, this.firstChild);\n          }\n        }\n      }\n    });\n  }\n};\nvar patchChildSlotNodes = (elm, cmpMeta) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  if (cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n    const childNodesFn = elm.__lookupGetter__(\"childNodes\");\n    Object.defineProperty(elm, \"children\", {\n      get() {\n        return this.childNodes.map((n) => n.nodeType === 1);\n      }\n    });\n    Object.defineProperty(elm, \"childElementCount\", {\n      get() {\n        return elm.children.length;\n      }\n    });\n    Object.defineProperty(elm, \"childNodes\", {\n      get() {\n        const childNodes = childNodesFn.call(this);\n        if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && getHostRef(this).$flags$ & 2 /* hasRendered */) {\n          const result = new FakeNodeList();\n          for (let i2 = 0; i2 < childNodes.length; i2++) {\n            const slot = childNodes[i2][\"s-nr\"];\n            if (slot) {\n              result.push(slot);\n            }\n          }\n          return result;\n        }\n        return FakeNodeList.from(childNodes);\n      }\n    });\n  }\n};\nvar getAllChildSlotNodes = (childNodes) => {\n  const slotRefNodes = [];\n  for (const childNode of Array.from(childNodes)) {\n    if (childNode[\"s-sr\"]) {\n      slotRefNodes.push(childNode);\n    }\n    slotRefNodes.push(...getAllChildSlotNodes(childNode.childNodes));\n  }\n  return slotRefNodes;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD24.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD24.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD24.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD24.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD24.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD24.experimentalSlotFixes) {\n    if (BUILD24.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype, cmpMeta);\n    }\n  } else {\n    if (BUILD24.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype, cmpMeta);\n    }\n    if (BUILD24.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD24.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD24.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      const hostRef = getHostRef(this);\n      addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n      connectedCallback(this);\n      if (BUILD24.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD24.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (!this.shadowRoot) {\n          if (BUILD24.shadowDelegatesFocus) {\n            this.attachShadow({\n              mode: \"open\",\n              delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n            });\n          } else {\n            this.attachShadow({ mode: \"open\" });\n          }\n        } else {\n          if (this.shadowRoot.mode !== \"open\") {\n            throw new Error(\n              `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`\n            );\n          }\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD24.style && BUILD24.mode && !BUILD24.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD25.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  const styles2 = /* @__PURE__ */ doc.querySelectorAll(`[${HYDRATED_STYLE_ID}]`);\n  let appLoadFallback;\n  let isBootstrapping = true;\n  let i2 = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD25.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD25.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  if (BUILD25.hydrateClientSide && BUILD25.shadowDom) {\n    for (; i2 < styles2.length; i2++) {\n      registerStyle(styles2[i2].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles2[i2].innerHTML), true);\n    }\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD25.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD25.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD25.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD25.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD25.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD25.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          this.hasRegisteredEventListeners = false;\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD25.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (!self.shadowRoot) {\n                if (BUILD25.shadowDelegatesFocus) {\n                  self.attachShadow({\n                    mode: \"open\",\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                  });\n                } else {\n                  self.attachShadow({ mode: \"open\" });\n                }\n              } else {\n                if (self.shadowRoot.mode !== \"open\") {\n                  throw new Error(\n                    `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`\n                  );\n                }\n              }\n            } else if (!BUILD25.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          const hostRef = getHostRef(this);\n          if (!this.hasRegisteredEventListeners) {\n            this.hasRegisteredEventListeners = true;\n            addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n          }\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD25.experimentalSlotFixes) {\n        if (BUILD25.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype, cmpMeta);\n        }\n      } else {\n        if (BUILD25.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype, cmpMeta);\n        }\n        if (BUILD25.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD25.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD25.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD25.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD25.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD25.invisiblePrehydration && (BUILD25.hydratedClass || BUILD25.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD25.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD26.hostListener && listeners) {\n    if (BUILD26.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD26.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD26.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD26.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD26.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD26.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD26.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = {\n      hostIds: 0,\n      rootLevelIds: 0,\n      staticComponents: new Set(staticComponents)\n    };\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  var _a;\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];\n    childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],
  "mappings": "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",
  "names": []
}
